library(curl)
install.packages("curl")
install.packages("curl")
library(curl)
install.packages("ca")
library(curl)
h <- new_handle()
?curtl
?new_handle
data = "{\"start_absolute\": 1452297600000, \"end_absolute\": 1456790400000,\"metrics\" : [
{\"name\": Dylos25, \"tags\": {\"Bin\":\"bin1\"}, \"aggregators\": [{\"name\": \"avg\", \"align_sampling\": \"true\", \"sampling\": {\"value\": 1, \"unit\": \"hours\"}}]},
{\"name\": Dylos25, \"tags\": {\"Bin\":\"bin2\"}, \"aggregators\": [{\"name\": \"avg\", \"align_sampling\": \"true\", \"sampling\": {\"value\": 1, \"unit\": \"hours\"}}]},
{\"name\": Dylos25, \"tags\": {\"Bin\":\"bin3\"}, \"aggregators\": [{\"name\": \"avg\", \"align_sampling\": \"true\", \"sampling\": {\"value\": 1, \"unit\": \"hours\"}}]},
{\"name\": Dylos25, \"tags\": {\"Bin\":\"bin4\"}, \"aggregators\": [{\"name\": \"avg\", \"align_sampling\": \"true\", \"sampling\": {\"value\": 1, \"unit\": \"hours\"}}]},
{\"name\": Dylos25, \"tags\": {\"Temp\":\"temp\"}, \"aggregators\": [{\"name\": \"avg\", \"align_sampling\": \"true\", \"sampling\": {\"value\": 1, \"unit\": \"hours\"}}]},
{\"name\": Dylos25, \"tags\": {\"RH\":\"rh\"}, \"aggregators\": [{\"name\": \"avg\", \"align_sampling\": \"true\", \"sampling\": {\"value\": 1, \"unit\": \"hours\"}}]}]}"
head(data)
handle_setopt(h, URL = "https://replicant.deohs.washington.edu/api/v1/datapoints/query")
handle_setopt(h, CAINFO = "C://Users//Elena//OneDrive//Documents//UW Postdoc//KairosScripts//cacert4.pem")
handle_setopt(h, USERPWD = "query:treelimberice7")
handle_setopt(h, POSTFIELDS = data)
handle_setopt(h, POST = 1)
req <- curl_fetch_memory("https://replicant.deohs.washington.edu/api/v1/datapoints/query", handle = h)
cat(rawToChar(req$content))
head(req)
head(req$content)
req$content
rawToChar(req$content)
cat(rawToChar(req$content))
?cat
output<-cat(rawToChar(req$content))
head(output)
output<-cat(rawToChar(req$content))
test<-cat(rawToChar(req$content))
handle_setopt
?handle_setopt
cat(rawToChar(req$content),file="output.txt")
?handle_setopt
cat(rawToChar(req$content),file="output.txt")
{\"name\": Dylos25, \"tags\": {\"RH\":\"rh\"}, \"aggregators\": [{\"name\": \"avg\", \"align_sampling\": \"true\", \"sampling\": {\"value\": 1, \"unit\": \"hours\"}}]}]}"
#Download data
library(curl)
h <- new_handle()
data = "{\"start_absolute\": 1452297600000, \"end_absolute\": 1456790400000,\"metrics\" : [
{\"name\": Dylos25, \"tags\": {\"Bin\":\"bin1\"}, \"aggregators\": [{\"name\": \"avg\", \"align_sampling\": \"true\", \"sampling\": {\"value\": 1, \"unit\": \"hours\"}}]},
{\"name\": Dylos25, \"tags\": {\"Bin\":\"bin2\"}, \"aggregators\": [{\"name\": \"avg\", \"align_sampling\": \"true\", \"sampling\": {\"value\": 1, \"unit\": \"hours\"}}]},
{\"name\": Dylos25, \"tags\": {\"Bin\":\"bin3\"}, \"aggregators\": [{\"name\": \"avg\", \"align_sampling\": \"true\", \"sampling\": {\"value\": 1, \"unit\": \"hours\"}}]},
{\"name\": Dylos25, \"tags\": {\"Bin\":\"bin4\"}, \"aggregators\": [{\"name\": \"avg\", \"align_sampling\": \"true\", \"sampling\": {\"value\": 1, \"unit\": \"hours\"}}]},
{\"name\": Dylos25, \"tags\": {\"Temp\":\"temp\"}, \"aggregators\": [{\"name\": \"avg\", \"align_sampling\": \"true\", \"sampling\": {\"value\": 1, \"unit\": \"hours\"}}]},
{\"name\": Dylos25, \"tags\": {\"RH\":\"rh\"}, \"aggregators\": [{\"name\": \"avg\", \"align_sampling\": \"true\", \"sampling\": {\"value\": 1, \"unit\": \"hours\"}}]}]}"
handle_setopt(h, URL = "https://replicant.deohs.washington.edu/api/v1/datapoints/query")
handle_setopt(h, CAINFO = "C://Users//Elena//OneDrive//Documents//UW Postdoc//KairosScripts//cacert4.pem")
handle_setopt(h, USERPWD = "query:treelimberice7")
handle_setopt(h, POSTFIELDS = data)
handle_setopt(h, POST = 1)
req <- curl_fetch_memory("https://replicant.deohs.washington.edu/api/v1/datapoints/query", handle = h)
cat(rawToChar(req$content),file="output.txt")
as.Date(1452297600000)
as.Date(1452297600000,origing="1970/01/01")
as.Date(1452297600000,origin="1970/01/01")
as.Date(1452297600000,origin="1970/01/01 00:00:00")
as.Date(1452297600000,origin="1970-01-01 00:00:00")
test<-read.csv("output.txt")
head(test)
?rawToChar
?cat
cat(rawToChar(req$content),file="output.txt",fill=T)
cat(rawToChar(req$content),file="output.txt",fill=T)
as.POSIXct(1452297600000,origin="1970-01-01")
as.POSIXct(as.numeric(1452297600000),origin="1970-01-01")
as.POSIXct(as.numeric(1452297600000),origin="1970-01-01",tz="GMT")
as.POSIXct(as.numeric(1452297600000),origin="1970-01-01 00:00:00",tz="GMT")
as.POSIXct(as.numeric(14522976),origin="1970-01-01 00:00:00",tz="GMT")
as.POSIXct(as.numeric(145229760000),origin="1970-01-01 00:00:00",tz="GMT")
as.POSIXct(as.numeric(14522976000),origin="1970-01-01 00:00:00",tz="GMT")
as.POSIXct(as.numeric(1452297600),origin="1970-01-01 00:00:00",tz="GMT")
test<-read.file("output.txt")
?read
??read
?read.csv
test<-read.table("output.txt")
head(test)
?handle_setopt
cat(rawToChar(req$content),file="output.txt")
?substr
grep("[[", test)
test
as.list(test)
grep("[[",as.list(test))
grep("\[[",as.list(test))
grep("\[\[",as.list(test))
grep(""[[",as.list(test))
grep(""[[""",as.list(test))
grep(""[["",as.list(test))
grep(""[["",as.character(test))
grep("[",as.character(test))
grep("[\",as.character(test))
grep([[]],as.character(test))
grep('[[[]',as.character(test))
grep("[[[]",as.character(test))
?grep
as.character(test)
grep("[[[]",test)
test
as.vector(test)
grep("[[[]",as.vector(test))
grep("23",as.vector(test))
typeof(test0)
typeof(test)
unlist(test)
grep("23",unlist(test))
unlist(test)[1]
regexpr("23",unlist(test))
regexpr("145",unlist(test))
length(unlist(test))
regexpr("a","apples are good")
grep("a","apples are good")
sub("a","apples are good")
grep("a","apples are good")
regexpr("a","apples are good")
gregexpr("a","apples are good")
"apples are good"[1]
?substr
substr("apples are good",gregexpr("a","apples are good")[[1]][1])
egexpr("a","apples are good")[[1]][1]
regexpr("a","apples are good")[[1]][1]
regexpr("a","apples are good")[[1]]
regexpr("a","apples are good")[[2]]
regexpr("a","apples are good")
gregexpr("a","apples are good")[[1]]
gregexpr("a","apples are good")[[1]][1]
gregexpr("a","apples are good")[[1]][1,]
gregexpr("a","apples are good")[[1]]
gregexpr("a","apples are good")[[2]]
names(gregexpr("a","apples are good")[[1]])
length(gregexpr("a","apples are good")[[1]])
gregexpr("a","apples are good")[[1]][,1]
gregexpr("a","apples are good")[[1]]
gregexpr("a","apples are good")
gregexpr("a","apples are good")[[1]]
as.data.frame(gregexpr("a","apples are good")[[1]])
t(as.data.frame(gregexpr("a","apples are good")[[1]]))
as.vector(gregexpr("a","apples are good")[[1]])
"apples are good"[as.vector(gregexpr("a","apples are good")[[1]])]
substr("apples are good",as.vector(gregexpr("a","apples are good")[[1]]) )
?substr
substr("apples are good",as.vector(gregexpr("a","apples are good")[[1]])[1] )
substr(rep("abcdef", 4), 1:4, 4:5)
substr("apples are good",as.vector(gregexpr("a","apples are good")[[1]])[1],as.vector(gregexpr("a","apples are good")[[1]])[1] )
substr("apples are good",as.vector(gregexpr("a","apples are good")[[1]])[1],as.vector(gregexpr("a","apples are good")[[1]])[1] +1)
substr("apples are good",8,9)
substr("apples are good",8,)
substr("apples are good",8,8)
substr("apples are good",c(1,8),c(1,8))
substring("apples are good",c(1,8),c(1,8))
seq(1,8)
as.vector(gregexpr("[[]","apples [are good")[[1]])
data.down<-read.table("output.txt")
dkairos<-read.table("output.txt")
as.vector(gregexpr("[[]",dkairos)[[1]])
dkairos<-read.table("output.txt")
cat(rawToChar(req$content),file="output.txt")
dkairos<-read.csv("output.txt")
dkairos<-read.csv("output.txt",header=F)
getwd()
?read.csv
dkairos<-read.table("output.txt",header=F)
head(dkairos)
as.vector(gregexpr("[[[]]",dkairos)[[1]])
as.vector(gregexpr("[[[]]",unlist(dkairos))[[1]])
substring(dkairos, 1,1)
substring(dkairos, 1,5)
substring(unlist(dkairos), 1,5)
as.vector(gregexpr("415",unlist(dkairos))[[1]])
as.vector(gregexpr("[[[]",unlist(dkairos))[[1]])
substring(unlist(dkairos), 1,1)
as.vector(gregexpr("\\[[",unlist(dkairos))[[1]])
as.vector(gregexpr("[\\]",unlist(dkairos))[[1]])
as.vector(gregexpr("[[[]",unlist(dkairos))[[1]])
as.vector(gregexpr("[\\[[]",unlist(dkairos))[[1]])
as.vector(gregexpr("\\[[",unlist(dkairos))[[1]])
as.vector(gregexpr("\\[[",unlist(dkairos))[[1]])
as.vector(gregexpr("\\[\\[",unlist(dkairos))[[1]])
ind<-as.vector(gregexpr("\\[\\[",unlist(dkairos))[[1]])
results<-list()
i=1
results[[i]]<-substring(unlist(dkairos), ind[1],ind[i+1])
results[[1]]
ind.end<-as.vector(gregexpr("\\]\\]",unlist(dkairos))[[1]])
ind.start<-as.vector(gregexpr("\\[\\[",unlist(dkairos))[[1]])
ind.end
ind.start
ind.end<-as.vector(gregexpr("\\]\\]",unlist(dkairos))[[1]])
results<-list()
results[[i]]<-substring(unlist(dkairos), ind.start[1]+1,ind.end[i]-1)
results[[1]]
results[[i]]<-substring(unlist(dkairos), ind.start[1]+1,ind.end[i])
tail(results[[1]])
temp<-substring(unlist(dkairos), ind.start[1]+1,ind.end[i])
head(temp)
temp<-gsub("\\[", temp)
temp<-substring(unlist(dkairos), ind.start[1]+1,ind.end[i])
temp<-gsub("\\[", temp)
temp<-gsub("\\[","", temp)
head(temp)
temp<-gsub("\\["&"\\]" ,"", temp)
temp<-gsub("\\["|"\\]" ,"", temp)
temp<-gsub("\\]","", temp)
head(temp)
temp[1[]]
temp[1]
temp<-as.data.frame(temp)
head(temp)
temp<-as.data.frame(temp)
head(temp)
temp[is.odd(seq_along(x))]
temp[is.odd(seq_along(temp))]
temp[c(TRUE, FALSE)]
temp[c(FALSE, TRUE)]
temp[1,]
temp<-as.data.frame(temp)
head(temp)
temp<-as.data.frame(temp)
temp<-as.data.frame(unlist(temp))
head(temp)
temp<-substring(unlist(dkairos), ind.start[1]+1,ind.end[i])
temp<-gsub("\\[","", temp)
temp<-gsub("\\]","", temp)
head(temp)
temp<-as.vector(unlist(temp))
hed(temp)
head(temp)
temp<-as.vector(as.data.frame((unlist(temp)))
temp<-as.vector(as.data.frame(unlist(temp)))
head(temp)
temp<-unlist(as.vector(as.data.frame(unlist(temp))))
head(temp)
temp[1]
temp<-data.frame(as.vector(as.data.frame(unlist(temp))))
temp<-substring(unlist(dkairos), ind.start[1]+1,ind.end[i])
temp<-gsub("\\[","", temp)
temp<-substring(unlist(dkairos), ind.start[1]+1,ind.end[i])
temp<-gsub("\\]"," ", temp)
temp<-gsub("\\["," ", temp)
temp<-data.frame(as.vector(as.data.frame(unlist(temp))))
temp<-substring(unlist(dkairos), ind.start[1]+1,ind.end[i])
#remove [ and ] characters
temp<-gsub("\\["," ", temp)
temp<-gsub("\\]"," ", temp)
head(temp)
temp<-data.frame(as.vector(as.data.frame(unlist(temp))))
